# -*- coding: utf-8 -*-
"""Copy of HandwrittenDigitsClassification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12JCrKdOkSXktUdsXBqv1z4_bH-2inS4x
"""

from keras.datasets import mnist
(train_images, train_labels), (test_images, test_labels) = mnist.load_data()

train_images.shape

train_images.ndim

type(train_images)

train_labels

test_images

test_labels

train_images

test_images

test_images.shape

# definging network structure

from tensorflow.keras import models

from tensorflow.keras import layers

network = models.Sequential()

network.add(layers.Dense(512, activation="relu" , input_shape=(28 * 28,)))

network.add(layers.Dense(10, activation="softmax"))

network.compile(optimizer="rmsprop", loss = "categorical_crossentropy", metrics=["accuracy"])

# Preparing the image data

train_images = train_images.reshape((60000, 28 * 28))
train_images = train_images.astype('float32') /255

test_images = test_images.reshape((10000, 28 * 28))
test_images = test_images.astype('float32') /255

from keras.utils import to_categorical
train_labels = to_categorical(train_labels)
test_labels = to_categorical(test_labels)

train_labels

network.fit(train_images, train_labels, epochs=5, batch_size=128)

test_loss, test_acc = network.evaluate(test_images, test_labels)
print('test_acc:', test_acc)